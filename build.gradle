plugins {
    id 'org.springframework.boot' version '3.2.6'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

defaultTasks 'bootRun'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-inline:5.2.0'
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    jvmArgs '-Dnet.bytebuddy.experimental=true'
}

// Task to build React frontend
task buildReact(type: Exec) {
    workingDir 'frontend'
    if (System.getProperty('os.name').toLowerCase().contains('windows')) {
        commandLine 'cmd', '/c', 'npm run build'
    } else {
        commandLine 'npm', 'run', 'build'
    }
}

// Task to copy React build to Spring Boot static resources
task copyReactBuild(type: Copy) {
    dependsOn buildReact
    from 'frontend/build'
    into 'src/main/resources/static'
}

// Make bootJar depend on copying React build
bootJar {
    dependsOn copyReactBuild
}

// Ensure that :copyReactBuild runs before :processResources
processResources.dependsOn(copyReactBuild)
// Alternatively, if you want to control order but not strict dependency:
// processResources.mustRunAfter(copyReactBuild)
